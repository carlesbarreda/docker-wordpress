name: Wordpress PHP 7.4 / 8.0 images CI

on:
  workflow_dispatch:

env:
  IMAGE_NAME: $IMAGE_NAME
  WP_VER: 5.7.0

jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: Dockerfile

      - name: Lint Dockerfile.alpine
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: Dockerfile.alpine

      - name: Lint Dockerfile.buster
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: Dockerfile.buster

  ScanBuster74:
    name: "Scan PHP 7.4 buster"
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Adding custom builder
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multiarch --driver docker-container --use
          docker buildx inspect --bootstrap

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV

      - name: Build php:7.4-fpm-buster
        if: ${{ env.PHP74 != '' }}
        run: |
          docker buildx build \
            --file Dockerfile.buster \
            --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7 \
            --tag $IMAGE_NAME:$WP_VER-php7.4-fpm-buster \
            --tag $IMAGE_NAME:php7.4-fpm-buster \
            --build-arg VERSION=$PHP74 \
            --build-arg VARIANT=fpm \
            --progress=plain \
            --load \
            .

      - name: Run Trivy vulnerability scanner (amd64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-buster'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  Buster74:
    name: "PHP 7.4 buster"
    runs-on: ubuntu-20.04
    needs: [ScanBuster74]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Adding custom builder
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multiarch --driver docker-container --use
          docker buildx inspect --bootstrap

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV

      - name: Build php:7.4-fpm-buster
        if: ${{ env.PHP74 != '' }}
        run: |
          docker buildx build \
            --file Dockerfile.buster \
            --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7 \
            --tag $IMAGE_NAME:$WP_VER-php7.4-fpm-buster \
            --tag $IMAGE_NAME:php7.4-fpm-buster \
            --build-arg VERSION=$PHP74 \
            --build-arg VARIANT=fpm \
            --progress=plain \
            --push .

  Alpine74:
    name: "PHP 7.4 alpine"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/docker/buildx/issues/495#issuecomment-761562905
      - name: Adding custom builder
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multiarch --driver docker-container --use
          docker buildx inspect --bootstrap
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      # https://github.com/actions/starter-workflows/issues/68
      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV
      - name: Build php:7.4-fpm-alpine
        if: ${{ env.PHP74 != '' }}
        run: |
          docker buildx build \
            --file Dockerfile.alpine \
            --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7 \
            --tag $IMAGE_NAME:$WP_VER-php7.4-fpm-alpine \
            --tag $IMAGE_NAME:$WP_VER-php7.4-fpm \
            --tag $IMAGE_NAME:php7.4-fpm-alpine \
            --tag $IMAGE_NAME:php7.4-fpm \
            --build-arg VERSION=$PHP74 \
            --build-arg VARIANT=fpm \
            --progress=plain \
            --push .

  Buster80:
    name: "PHP 8.0 buster"
    needs: [Buster74]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/docker/buildx/issues/495#issuecomment-761562905
      - name: Adding custom builder
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multiarch --driver docker-container --use
        #  docker buildx inspect --bootstrap
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      # https://github.com/actions/starter-workflows/issues/68
      - name: Set env from file
        run: grep -e ^PHP80.*= .env.build >> $GITHUB_ENV
      - name: Build php:8.0-fpm-buster
        if: ${{ env.PHP80 != '' }}
        run: |
          docker buildx build \
            --file Dockerfile.buster \
            --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7 \
            --tag $IMAGE_NAME:$WP_VER-php8.0-fpm-buster \
            --tag $IMAGE_NAME:php8.0-fpm-buster \
            --build-arg VERSION=$PHP80 \
            --build-arg VARIANT=fpm \
            --progress=plain \
            --push .

  Alpine80:
    name: "PHP 8.0 alpine"
    needs: [Alpine74]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/docker/buildx/issues/495#issuecomment-761562905
      - name: Adding custom builder
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multiarch --driver docker-container --use
        #  docker buildx inspect --bootstrap
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      # https://github.com/actions/starter-workflows/issues/68
      - name: Set env from file
        run: grep -e ^PHP80.*= .env.build >> $GITHUB_ENV
      - name: Build php:8.0-fpm-alpine
        if: ${{ env.PHP80 != '' }}
        run: |
          docker buildx build \
            --file Dockerfile.alpine \
            --platform linux/amd64,linux/386,linux/arm64,linux/arm/v7 \
            --tag $IMAGE_NAME:$WP_VER-php8.0-fpm-alpine \
            --tag $IMAGE_NAME:$WP_VER-php8.0-fpm \
            --tag $IMAGE_NAME:php8.0-fpm-alpine \
            --tag $IMAGE_NAME:php8.0-fpm \
            --tag $IMAGE_NAME:latest \
            --build-arg VERSION=$PHP80 \
            --build-arg VARIANT=fpm \
            --progress=plain \
            --push .
