name: Wordpress PHP 7.4 / 8.0 images CI

on:
  workflow_dispatch:

env:
  IMAGE_NAME: carlesbarreda/wordpress
  WP_VER: 5.7.0

jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #- name: Lint Dockerfile
      #  uses: brpaz/hadolint-action@v1.2.1
      #  with:
      #    dockerfile: Dockerfile

      - name: Lint Dockerfile
        run: |
          docker run --rm -i -v ${PWD}/.hadolint.yml:/root/.config/hadolint.yaml hadolint/hadolint < Dockerfile

      - name: Lint Dockerfile.alpine
        run: |
          docker run --rm -i -v ${PWD}/.hadolint.yml:/root/.config/hadolint.yaml hadolint/hadolint < Dockerfile.alpine

      - name: Lint Dockerfile.buster
        run: |
          docker run --rm -i -v ${PWD}/.hadolint.yml:/root/.config/hadolint.yaml hadolint/hadolint < Dockerfile.buster

  ScanBuster74:
    name: "Scan PHP 7.4 buster"
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV

      - name: Scan amd64
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/amd64
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-buster-amd64
          load: true

      - name: Run Trivy vulnerability scanner (amd64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-buster-amd64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan 386
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/386
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-buster-386
          load: true

      - name: Run Trivy vulnerability scanner (386)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-buster-386'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan arm64
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/arm64
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-buster-arm64
          load: true

      - name: Run Trivy vulnerability scanner (arm64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-buster-arm64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan armv7
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-buster-armv7
          load: true

      - name: Run Trivy vulnerability scanner (armv7)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-buster-armv7'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  Buster74:
    name: "PHP 7.4 buster"
    runs-on: ubuntu-20.04
    needs: [ScanBuster74]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV

      - name: Build php7.4-fpm-buster
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-buster
            ${{ env.IMAGE_NAME }}:php7.4-fpm-buster
          push: true

  ScanAlpine74:
    name: "Scan PHP 7.4 alpine"
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV

      - name: Scan amd64
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-alpine-amd64
          load: true

      - name: Run Trivy vulnerability scanner (amd64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-alpine-amd64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan 386
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/386
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-alpine-386
          load: true

      - name: Run Trivy vulnerability scanner (386)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-alpine-386'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan arm64
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/arm64
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-alpine-arm64
          load: true

      - name: Run Trivy vulnerability scanner (arm64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-alpine-arm64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan armv7
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-alpine-armv7
          load: true

      - name: Run Trivy vulnerability scanner (armv7)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php7.4-fpm-alpine-armv7'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  Alpine74:
    name: "PHP 7.4 alpine"
    runs-on: ubuntu-20.04
    needs: [ScanAlpine74]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP74.*= .env.build >> $GITHUB_ENV

      - name: Build php7.4-fpm-alpine
        if: ${{ env.PHP74 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP74 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm-alpine
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php7.4-fpm
            ${{ env.IMAGE_NAME }}:php7.4-fpm-alpine
            ${{ env.IMAGE_NAME }}:php7.4-fpm
          push: true

  ScanBuster80:
    name: "Scan PHP 8.0 buster"
    runs-on: ubuntu-20.04
    needs: [buster74]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP80.*= .env.build >> $GITHUB_ENV

      - name: Scan amd64
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/amd64
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-buster-amd64
          load: true

      - name: Run Trivy vulnerability scanner (amd64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-buster-amd64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan 386
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/386
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-buster-386
          load: true

      - name: Run Trivy vulnerability scanner (386)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-buster-386'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan arm64
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/arm64
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-buster-arm64
          load: true

      - name: Run Trivy vulnerability scanner (arm64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-buster-arm64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan armv7
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-buster-armv7
          load: true

      - name: Run Trivy vulnerability scanner (armv7)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-buster-armv7'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  Buster80:
    name: "PHP 8.0 buster"
    needs: [ScanBuster80]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP80.*= .env.build >> $GITHUB_ENV

      - name: Build php8.0-fpm-buster
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buster
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-buster
            ${{ env.IMAGE_NAME }}:php8.0-fpm-buster
          push: true

  ScanAlpine80:
    name: "Scan PHP 8.0 alpine"
    runs-on: ubuntu-20.04
    needs: [alpine74]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP80.*= .env.build >> $GITHUB_ENV

      - name: Scan amd64
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-alpine-amd64
          load: true

      - name: Run Trivy vulnerability scanner (amd64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-alpine-amd64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan 386
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/386
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-alpine-386
          load: true

      - name: Run Trivy vulnerability scanner (386)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-alpine-386'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan arm64
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/arm64
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-alpine-arm64
          load: true

      - name: Run Trivy vulnerability scanner (arm64)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-alpine-arm64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan armv7
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-alpine-armv7
          load: true

      - name: Run Trivy vulnerability scanner (armv7)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$IMAGE_NAME:$WP_VER-php8.0-fpm-alpine-armv7'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  Alpine80:
    name: "PHP 8.0 alpine"
    needs: [ScanAlpine80]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set env from file
        run: grep -e ^PHP80.*= .env.build >> $GITHUB_ENV

      - name: Build php8.0-fpm-alpine
        if: ${{ env.PHP80 != '' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7
          build-args: |
            VERSION=${{ env.PHP80 }}
            VARIANT=fpm
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm-alpine
            ${{ env.IMAGE_NAME }}:${{ env.WP_VER }}-php8.0-fpm
            ${{ env.IMAGE_NAME }}:php8.0-fpm-alpine
            ${{ env.IMAGE_NAME }}:php8.0-fpm
            ${{ env.IMAGE_NAME }}:latest
          push: true
